--JOIN TABLE 연급 - ON DELETE CASCADE 로 자식 테이블을 생성

--부모 테이블인 SHOP을 만들어보자 상품을 등록하는 테이블
CREATE TABLE SHOP (
    SANGCODE VARCHAR2(10)
        CONSTRAINT PK_SHOP_SANGCODE PRIMARY KEY,
    SANGNAME VARCHAR2(30),
    SANGPRICE NUMBER(7)
);

--SHOP의 상품코드를 참조해서 CART에 담을 수 있도록 테이블을 생성
-- 상품을 지우면 CART 의 데이터도 자동으로 지울 수 있도록 ON DELETE CASCADE를 설정 생성
CREATE TABLE CART (
    CARTNUM NUMBER(3)
        CONSTRAINT PK_CARTNUM PRIMARY KEY,
    SANGCODE VARCHAR2(10),
    CNTNUM NUMBER(3)
        DEFAULT 1,
    CNTDAY DATE,
    CONSTRAINT FK_CART_SANGCODE --외부키는 기본키 제약조건과 달리 별도로 선언
        FOREIGN KEY(SANGCODE)
        REFERENCES SHOP(SANGCODE)
        ON DELETE CASCADE --SHOP에서의 상품코드가 삭제되면 자동으로 카트의 그것도 삭제
);

-- CART에 들어갈 시퀀스 생성
CREATE SEQUENCE SEQCART NOCACHE;

-- 상품등록을 하자
INSERT INTO SHOP VALUES ('A100', '체크블라우스', 23000);
INSERT INTO SHOP VALUES ('A200', '브이넥티셔츠', 19000);
INSERT INTO SHOP VALUES ('A300', '레이스블라우스', 34000);
INSERT INTO SHOP VALUES ('A400', '블랙진바지', 25000);
INSERT INTO SHOP VALUES ('A500', '실크스카프', 12000);
INSERT INTO SHOP VALUES ('A600', '인견자켓', 59000);
INSERT INTO SHOP VALUES ('A700', '오리털파카', 123000);
INSERT INTO SHOP VALUES ('A800', '체크티셔츠', 35000);
INSERT INTO SHOP VALUES ('A900', '실크블라우스', 89000);
COMMIT;

-- 삽입한 데이터 조회
SELECT *
FROM SHOP
ORDER BY sangcode;

-- 카트에 원하는 상품을 담아보자
INSERT INTO CART (CARTNUM, SANGCODE, CNTDAY)
VALUES (seqcart.nextval, 'A500', SYSDATE);
INSERT INTO CART (CARTNUM, SANGCODE, CNTDAY)
VALUES (seqcart.nextval, 'A700', SYSDATE);
INSERT INTO CART (CARTNUM, SANGCODE, CNTNUM, CNTDAY)
VALUES (seqcart.nextval, 'A800', 3, SYSDATE);
INSERT INTO CART (CARTNUM, SANGCODE, CNTNUM, CNTDAY)
VALUES (seqcart.nextval, 'A100', 2, SYSDATE);
INSERT INTO CART (CARTNUM, SANGCODE, CNTNUM, CNTDAY)
VALUES (seqcart.nextval, 'A500', 1, SYSDATE);
INSERT INTO CART (CARTNUM, SANGCODE, CNTNUM, CNTDAY)
VALUES (seqcart.nextval, 'A400', 2, SYSDATE);
COMMIT;

--SQL JOIN문을 이용해서 다음 순서로 출력
-- CARTNUM, SANGCODE, SANGNAME, SANGPRICE, CNTNUM, CNTDAY는 년-월-일 시:분
SELECT CARTNUM, C.SANGCODE, SANGNAME, SANGPRICE, CNTNUM,
       TO_CHAR(CNTDAY, 'YYYY-MM-DD HH24:MI')
FROM CART C
JOIN SHOP S 
    ON S.SANGCODE = C.SANGCODE
ORDER BY CARTNUM;

--OUTER JOIN을 이용해서 아무도 카트에 담지 않은 상품을 알아보자
SELECT CARTNUM, C.SANGCODE, SANGNAME, SANGPRICE, CNTNUM,
       TO_CHAR(CNTDAY, 'YYYY-MM-DD HH24:MI')
FROM CART C
JOIN SHOP S 
    ON S.SANGCODE = C.SANGCODE(+) --PLUS 기호는 OUTER JOIN 의미
        AND CARTNUM IS NULL
ORDER BY CARTNUM;

-- ON DELETE CASCADE 로 생성한 경우 카트에 담긴 데이터도 부모테이블인 SHOP에서 삭제가 가능하다
-- 이때 삭제시 카트에 담긴 상품은 자동으로 삭제가 된다

-- SHOP에서 A500을 제거해보자 (카트에 두 개 담겨있음)
DELETE FROM SHOP
WHERE SANGCODE = 'A500';

-- 다시 JOIN으로 CART TABLE 확인
SELECT CARTNUM, C.SANGCODE, SANGNAME, SANGPRICE, CNTNUM,
       TO_CHAR(CNTDAY, 'YYYY-MM-DD HH24:MI')
FROM CART C
JOIN SHOP S 
    ON S.SANGCODE = C.SANGCODE
ORDER BY CARTNUM;

-- 프로시져 맛보기





